{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","npm","start","email","style","backgroundColor","color","Heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","prototype","PropTypes","string","abouttext","defaultProps","Alert","height","alert","msg","About","myStyle","border","borderColor","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","react_router_dist","exact","path","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.68223eb3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n          </li>\r\n          \r\n          \r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'} mx-5`} >\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light' ? 'Dark':'Light'}Mode </label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.prototype={\r\n    title: PropTypes.string,\r\n    abouttext: PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n    title:\"Set Title Here\",\r\n    abouttext:\"Set About \"\r\n};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleonChange=(event)=>{\r\n        //console.log(\"On Change\")\r\n         setText(event.target.value)\r\n    }\r\n    const handleUppclick=(event)=>{\r\n       // console.log(\"Uppercase was Clicked: \" + text)\r\n        let newText=text.toUpperCase()\r\n        setText(newText)\r\n        if(text.length===0)\r\n        props.showAlert(\"Please Enter Text\",\"Failed\")\r\n        else\r\n        props.showAlert(\"Converted to Uppercase!\",\"Success\")\r\n    }\r\n    const handleLOclick=(event)=>{\r\n        // console.log(\"Uppercase was Clicked: \" + text)\r\n         let newText=text.toLowerCase()\r\n         setText(newText)\r\n         if(text.length===0)\r\n         props.showAlert(\"Please Enter Text\",\"Failed\")\r\n         else\r\n         props.showAlert(\"Converted to Lowercase!\",\"Success\")\r\n     }\r\n     const handleERclick=(event)=>{\r\n        setText('')\r\n        if(text.length===0)\r\n        props.showAlert(\"Please Enter Text\",\"Failed\")\r\n        else\r\n        props.showAlert(\"Text Cleared\",\"Success\")\r\n        \r\n     }\r\n     const handleCopy=(event)=>{\r\n        // console.log(\"Uppercase was Clicked: \" + text)\r\n         var text=document.getElementById('myBox');\r\n         text.select();\r\n         navigator.clipboard.writeText(text.value);\r\n         if(text.length===0)\r\n         props.showAlert(\"Please Enter Text\",\"Failed\")\r\n         else\r\n         props.showAlert(\"Text Copied\",\"Success\")\r\n     }\r\n     const handleExtraSpace=(event)=>{\r\n        // console.log(\"Uppercase was Clicked: \" + text)\r\n         let newText=text.split(/[ ]+/);\r\n         setText(newText.join(\" \"));\r\n         if(text.length===0)\r\n         props.showAlert(\"Please Enter Text\",\"Failed\")\r\n         else\r\n         props.showAlert(\"Extra Space has been removed!\",\"Success\")\r\n     }\r\n\r\n    const [text,setText] = useState('')\r\n     // const [text,setText] = useState('Enter the state') ///// it is a state\r\n    //text=\"new Text\"; // wrong way to change the state\r\n   // setText(\"new Text\"); // correct way to change the state\r\n  return (\r\n    <>\r\n    <div className='container'npm start\r\n     >\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\"></label>\r\n        <h2>{props.email}</h2>\r\n        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" style={{backgroundColor: props.mode==='dark'?'black':'white',color: props.mode==='light'?'black':'white'}}/>\r\n      </div>\r\n     <div className='container'>\r\n     <h1>{props.Heading}</h1>\r\n     <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text}  onChange={handleonChange}  style={{backgroundColor: props.mode==='dark'?'black':'white',color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n     </div>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-1'  onClick={handleUppclick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-1'  onClick={handleLOclick}>Convert to Lowercase</button>\r\n        <button disabled={text.length==0}className='btn btn-primary mx-2 my-1'  onClick={handleERclick}>Click to EraseText</button>\r\n        <button disabled={text.length===0}className='btn btn-primary mx-2 my-1'  onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-1'  onClick={handleExtraSpace}>Remove Extra Space</button>\r\n      </div>\r\n   </div>\r\n    <div className=\"container my-3\"    style={{backgroundColor:props.mode==='dark'?'black':'white',color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p> {text.split(\" \").filter((element)=>{return element.length!==0}).length} Words and {text.length} Characters</p>\r\n        <p> Time taken to read these Words Slowly is: {.008*text.split(\" \").length} </p>\r\n        <h2>Preview  </h2>\r\n        <p>{text.length>0 ? text:'Enter Something to Preview'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div  style={{height:'50px'}}>\r\n     {props.alert && <div className=\"alert alert-warning alert-dismissible fade show\"  role=\"alert\">\r\n    <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function About(props) {\r\n  let myStyle={\r\n    color: props.mode==='dark' ? 'white' : 'black',\r\n    backgroundColor:props.mode==='light' ? 'white' : 'black',\r\n    border:' 2px solid white',\r\n    borderColor:props.mode==='dark' ? 'white' : 'black',\r\n  }\r\n  return (\r\n    <div className='container '   style={{ color: props.mode==='dark' ? 'white' : 'black'}} >\r\n        <h1 className='container my-3' >About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\"  >\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n      <button className=\"accordion-button\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>Accordion Item #1</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={{color: props.mode==='dark'?'white':'black'}}aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"  >\r\n      <div className=\"accordion-body\" style={myStyle} >\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\"   style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"   >\r\n        <strong>Accordion Item #2</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={{backgroundColor: props.mode==='light'?'white':'black'}} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\"  >\r\n      <div className=\"accordion-body\" style={myStyle}  >\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item \">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"  >\r\n      <strong>Accordion Item #3</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\"  aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\" >\r\n      <div className=\"accordion-body \"  style={myStyle} >\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert'\nimport About from './components/About'\n//import About from './components/About';\n\nimport \n{ BrowserRouter as Router, \n   Routes,\n   Route \n  } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light')\n  const [alert,setAlert]=useState(null)\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n     setAlert(null) \n    },2000)\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=  'black';\n      showAlert(\"Dark mode has been enabled\",\"Success\")\n    }\n    else{\n    setMode('light');\n    document.body.style.backgroundColor=  'white';\n    showAlert(\"Light mode has been enabled\",\"Success\")\n    }\n  }\n  return (\n<>\n<Router>\n{/*<Navbar   title=\" TextUtils\"    abouttext=\"About TextUtils\"/>*/}\n{/* <Navbar   title=\" TextUtils\"    /> */} {/* when we does't pass abouttext than it get the  default vaue of abouttext that is already defined in navbaar.default */}\n\n      <Navbar title =\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n     <Routes>\n        <Route exact path=\"/about\" element={<About  mode={mode}/>}/>\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"TextUtils - Word counter, character counter, Remove extra spaces\" mode={mode}/>}/>\n      </Routes>\n  \n  {/*} <TextForm showAlert={showAlert} heading=\"Enter your text here\" mode={mode}/>*/}\n      </div>\n      {/*<About/>*/}\n</Router>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}